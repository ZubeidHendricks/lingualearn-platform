name: LinguaLearn CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        if [ -f package.json ]; then
          npm ci
        else
          echo "No package.json found"
        fi
    
    - name: Run Backend Tests
      working-directory: ./backend
      if: hashFiles('backend/package.json') != ''
      run: npm test
      env:
        MONGODB_URI: mongodb://localhost:27017/lingualearn-test

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        if [ -f package.json ]; then
          npm ci
        else
          echo "No package.json found"
        fi
    
    - name: Run Frontend Tests
      working-directory: ./frontend
      if: hashFiles('frontend/package.json') != ''
      run: npm test
      env:
        CI: true

  ai-services-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Python Dependencies
      working-directory: ./ai_services
      run: |
        if [ -f requirements.txt ]; then
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        else
          echo "No requirements.txt found"
        fi
    
    - name: Run Python Tests
      working-directory: ./ai_services
      if: hashFiles('ai_services/requirements.txt') != ''
      run: |
        if command -v pytest &> /dev/null; then
          python -m pytest
        else
          echo "No tests to run"
        fi

  docker-build:
    needs: [backend-tests, frontend-tests, ai-services-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      if: env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != ''
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build Backend
      run: |
        if [ -f backend/Dockerfile ]; then
          docker build -t lingualearn/backend:latest ./backend
        fi
    
    - name: Build Frontend
      run: |
        if [ -f frontend/Dockerfile ]; then
          docker build -t lingualearn/frontend:latest ./frontend
        fi
    
    - name: Build AI Services
      run: |
        if [ -f ai_services/Dockerfile ]; then
          docker build -t lingualearn/ai-services:latest ./ai_services
        fi
    
    - name: Push Images
      if: env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != ''
      run: |
        docker push lingualearn/backend:latest || true
        docker push lingualearn/frontend:latest || true
        docker push lingualearn/ai-services:latest || true